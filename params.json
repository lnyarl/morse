{"name":"Morse","body":"# Morse\r\n\r\n## Introduction\r\n\r\n자바스크립트로 만든 모스부호 입력기\r\n\r\n<img src=\"http://distilleryimage6.instagram.com/709333a28c9311e1be6a12313820455d_7.jpg\" width=\"300\" height=\"300\" />\r\n<br />(내가 그렸다.)\r\n\r\n## Quick start\r\n\r\n이 코드는 'sample1.js'와 'sample1.html'의 코드이다. 아래는 html파일의 내용이다.\r\n\r\n\t<html>\r\n\t\t<head>\r\n\t\t\t<title>sample1</title>\r\n\t\t\t<script type=\"text/javascript\" src=\"../lib/jquery.js\" ></script>\r\n\t\t\t<script type=\"text/javascript\" src=\"../lib/morse.js\" ></script>\r\n\t\t\t<script type=\"text/javascript\" src=\"./sample1.js\" ></script>\r\n\t\t</head>\r\n\t\t<body>\r\n\t\t\tsee console<br />\r\n\t\t\t<textarea id=\"input\"></textarea>\r\n\t\t</body>\r\n\t</html>\r\n\r\n그리고 자바스크립트는 다음과 같다.\r\n\r\n\t$(document).ready(function(){\r\n\t\tvar morse = new Morse();\r\n\t\t\r\n\t\tvar handler = morse.getHandler();\r\n\t\t$('#input').keydown(handler.on).keyup(handler.off);\r\n\t});\r\n\r\n이제 html파일을 열어 textarea를 클릭해 포커스를 주고 아무키나 눌러보자. 길게도 누르고 있다가 떼도 되고 짧게 누르고 있다가 떼도 된다. 콘솔창을 보면 자신이 누른 것이 출력되는 것을 볼 수 있다. 만약 'dot'의 길이를 바꾸고 싶다면 생성자에 ms단위의 시간을 인자로 넘기면 된다.\r\n\r\n\tvar morse = new Morse(300);\t// 이제 'dot'은 300ms이다\r\n\r\n0 ms에서 300 ms 사이의 입력은 'dot'으로 인식하고 300 ms에서 900 ms('dot'의 3배 길이)에 들어오는 입력은 'dash'로 인식한다.\r\n\r\n## API\r\n\r\n### contructor\r\n\r\n#### Morse()\r\n\r\n기본 생성자. 'dot'은 200 ms 이다.\r\n\r\n사용법:\r\n\r\n\tvar morse = new Morse();\r\n\r\n#### Morse(duration)\r\n\r\n'dot'의 길이를 인자로 받는 생성자.\r\n\r\n사용법:\r\n\r\n\tvar morse = new Morse(100);\t// dot duration is 100ms\r\n\r\n### callback\r\n\r\n* **input_handler(input)** : 사용자가 'dot'이나 'dash'를 입력 했을 때 호출된다.\r\n* **letter_handler(input)** : 사용자가 한 글자를 입력했을 때 호출된다. 한 글자는 'dot'과 'dash'를 조합하여 완성한다.\r\n* **word_handler(input)** : 사용자가 한 단어를 입력 했을 때 호출된다. 'dot'의 7배의 시간동안 입력이 없으면 한 단어가 입력된 것으로 인식한다.\r\n* **error_handler(e)** : `out()`메서드에서 적합하지 않은 코드를 인식했을 때 호출된다.\r\n\r\n### method\r\n\r\n#### feed(input)\r\n\r\n내부 입력 버퍼에 입력을 쌓는다.\r\n\r\n사용법:\r\n\r\n\tvar morse = new Morse();\r\n\t\r\n\tmorse.feed('.');\r\n\tmorse.feed('-');\r\n\tassert(morse.out(true) == 'a');\r\n\r\n\tmorse.feed('.');\r\n\tmorse.feed('-');\r\n\tmorse.feed(' ');\r\n\tmorse.feed('.');\r\n\tmorse.feed('-');\r\n\tassert(morse.out(ture) == 'aa');\r\n\r\n\tmorse.feed('.');\r\n\tmorse.feed('-');\r\n\tmorse.feed(' ');\r\n\tmorse.feed('.');\r\n\tmorse.feed('-');\r\n\tmorse.feed('/');\r\n\tmorse.feed('.');\r\n\tmorse.feed('-');\r\n\tassert(morse.out(true) == 'aa a');\r\n\t\r\n#### out(flush)\r\n\r\n내부 입력 버퍼에 쌓인 데이터를 파싱해 모스기호를 문자로 변환한다. 인자로 들어오는 flush가 true이면 입력 버퍼를 초기화 한다.\r\n\r\n사용법:\r\n\r\n\tvar morse = new Morse();\r\n\t\r\n\tmorse.feed('.');\r\n\tmorse.feed('-');\r\n\tassert(morse.out() == 'a');\r\n\tmorse.feed(' ');\r\n\tmorse.feed('.');\r\n\tmorse.feed('-');\r\n\tassert(morse.out() == 'aa');\r\n\t\r\n\tassert(morse.out(true) == 'aa');\r\n\t\r\n\tmorse.feed('.');\r\n\tmorse.feed('-');\r\n\tassert(morse.out() == 'a');\r\n\r\n#### getHandler()\r\n\r\n모스 기호를 만들어내는데 사용되는 핸들러를 가져온다. 사용되는 핸들러는 on, off이다. 보통 keydown 이벤트에 on을, keyup 이벤트에 off를 매핑 시켜서 사용한다.\r\n\r\n사용법:\r\n\r\n\tvar morse = new Morse();\r\n\tvar handler = morse.getHandler();\r\n\t$('#input').keydown(handler.on)\r\n\t\t.keyup(handler.off);\r\n\r\n#### flush()\r\n\r\n내부 입력 버퍼를 초기화한다.\r\n\r\n### static method\r\n\r\n#### Morse.get(code)\r\n\r\n사용법:\r\n\r\n\tassert(Morse.get('.-') == 'a');\r\n\tassert(Morse.get('--.-') == 'q');\r\n\tMorse.get('............') // error\r\n\r\n#### Morse.suggest(code)\r\n\r\n테스트되지 않았다. 사용하지 말길 바란다.\r\n\r\n## To do\r\n\r\n* 한글, 기호, 숫자 지원\r\n\r\n## Reference\r\n\r\n* [wikipedia - morse code(en)](http://en.wikipedia.org/wiki/Morse_code)\r\n* [wikipedia - morse code(ko)](http://ko.wikipedia.org/wiki/%EB%AA%A8%EC%8A%A4_%EB%B6%80%ED%98%B8)\r\n","tagline":"morse","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}